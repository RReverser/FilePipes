<!DOCTYPE html>
<html>
<head>
    <% include header %>
    <script>
    addEventListener('load', function() {
        var filesTemplate = new EJS({url: '/views/files.ejs'});
        var socket = getPageSocket();

        function getFiles() {
            return Array.prototype.map.call($('file').files, function(file) {
                return {
                    name: file.name,
                    size: file.size,
                    type: file.type
                };
            });
        }

        socket.on('connect', function() {
            var html_personalUrl = $('personalUrl');
            html_personalUrl.href = socket.socket.sessionid + '/';
            html_personalUrl.innerHTML = html_personalUrl.href;
            $('connectingMsg').style.display = 'none';
            $('personalUrl').style.display = 'inline';

            socket.emit('updateFiles', getFiles());
        });

        socket.on('disconnect', function() {
            $('personalUrl').style.display = 'none';
            $('connectingMsg').style.display = 'inline';
        });

        socket.on('getChunk', function(fileName, offset, chunkSize, callback) {
            var file = Array.prototype.filter.call($('file').files, function(file) { return file.name == fileName })[0];
            var reader = new FileReader();
            reader.addEventListener('load', function() { callback(reader.result) });
            reader.readAsBinaryString(file.slice(offset, offset + chunkSize));
        });

        $('file').addEventListener('change', function() {
            var files = getFiles();
            socket.emit('updateFiles', files);
            $('fileList').innerHTML = filesTemplate.render({files: files, filesAreLinks: false});
        });
    });
    </script>
</head>
<body>
    <h2>Your personal client URL: <a id="personalUrl" style="display: none"></a><i id="connectingMsg">[ connecting... ]</i></h2>
    <input type="file" id="file" multiple />
    <% include ../public/views/files_table.ejs %>
</body>
</html>